{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/helpers/component-error.js","webpack:///./src/js/modules/action-list/list-card.js","webpack:///./src/js/modules/api/api.actions.js","webpack:///./src/js/modules/action-list/list-remote.js","webpack:///./src/js/components/binder.js","webpack:///./src/js/modules/action-plan/actions-risks.js","webpack:///./node_modules/mitt/dist/mitt.es.js","webpack:///./src/js/components/form.js","webpack:///./src/js/helpers/component-reference.js","webpack:///./src/js/helpers/component-helpers.js","webpack:///./src/js/components/button-radio.js","webpack:///./src/js/modules/action-plan/index.js","webpack:///./src/js/modules/action-plan/actions-form.js","webpack:///./src/js/components/virtual-table.js","webpack:///./src/js/modules/action-list/list-util.js","webpack:///./src/js/modules/action-list/index.js","webpack:///./src/js/modules/action-plan/actions-helpers.js","webpack:///./src/js/modules/action-drawer/drawer-form.js","webpack:///./src/js/components/drawer.js","webpack:///./src/js/modules/action-drawer/drawer-static.js","webpack:///./src/js/modules/action-drawer/drawer-remote.js","webpack:///./src/js/modules/action-drawer/index.js","webpack:///./src/js/components/field-toggler.js","webpack:///./src/js/modules/action/action-form.js","webpack:///./src/js/modules/action/index.js","webpack:///./src/js/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ComponentError","message","type","errors","Error","CreateCard","props","removeable","editable","removeBtn","editBtn","acaoTitulo","acaoDescricao","getStatusTag","acaoStatus","acaoResponsavel","acaoMonitoramento","dueDate","doneDate","getActionDate","acaoPrazo","acaoTermino","status","text","toLowerCase","ORQUESTRA_SOAP_UPDATE_FORM","process","ORQUESTRA_REST_INSTANCES","ORQUESTRA_DATASOURCE_ACTIONS","getActions","codFlowExecute","url","URL","params","inpCodFlowExecuteStarter","search","URLSearchParams","toString","fetch","then","res","json","success","reduce","parseData","createAction","token","formValues","payload","flow","id","parseInt","values","formValuesToRestFormat","CodFlowExecuteParent","CodFlowParent","DsFlowElementAlias","simulation","method","body","JSON","stringify","headers","Authorization","updateActionsList","XmlValues","formValuesToSoapFormat","formatSoapPayload","xmlString","$","parseXML","actions","row","fields","txt","entries","map","formatObjectToXmlString","Array","isArray","join","prop","ListRemote","$refs","section","document","querySelector","vtable","state","mount","classList","add","ActionsService","render","removeLoadingState","markup","insertAdjacentHTML","remove","defaults","ref","filters","cnpj","replace","titleCase","split","word","charAt","toUpperCase","slice","empty","ActionsRisks","elements","querySelectorAll","instance","update","element","getRefs","filter","field","setValue","updateAll","forEach","on","e","dataset","textBind","textFilter","innerHTML","Binder","arrow","getArrowByLevel","treatmentIcon","getTreatmentIcon","level","icon","treatment","all","handler","push","off","splice","indexOf","emit","evt","COD_FLOW","getElementById","COD_FLOW_EXECUTE","COD_FLOW_EXECUTE_MASTER","COD_FLOW_EXECUTE_TASK","COD_FLOW_EXECUTE_TASK_POSITION","COD_FLOW_EXECUTE_C","ASSOCIATE_TO_COD_FLOW","ASSOCIATE_TO_COD_FLOW_EXECUTE","COD_TASK","TASK_ALIAS","IS_SIMULATION","USER_TOKEN","OrquestraData","codFlow","getInputValue","codFlowExecuteMaster","codFlowExecuteTask","codFlowExecuteTaskPosition","codFlowExecuteC","associateToCodFlow","associateToCodFlowExecute","codTask","taskAlias","isSimulation","userToken","inputValue","getField","fieldId","options","alwaysArray","length","clearField","changeEvent","Event","fieldType","includes","checked","dispatchEvent","addRequired","console","error","setAttribute","removeAttribute","removeRequired","showField","container","$container","closest","isRequired","getAttribute","hideField","getFieldValue","checkedField","find","checkedFields","target","callback","conditionals","context","helperClass","showTable","tableRef","$table","substring","hideTable","events","arrEvents","resolveCallbacks","event","addEventListener","resolveReference","reference","component","HTMLElement","HTMLCollection","removeOptionPrefix","option","splitSeparator","trim","groupClass","btnClass","activeClass","hidePrefix","createInstance","select","textvalue","inputHidden","getOrquestraField","textContent","removeTextPrefix","btnGroupHtml","buttons","label","getButtonMarkup","getButtonGroupMarkup","getOrquestraFieldOptions","style","display","buttonGroup","nextSibling","createButtonGroup","isEnable","reset","set","button","onClick","onChange","addListners","_buttonGroup","this","silent","ActionsForm","isAssignee","assignee","codUser","currentAssignee","currentCodUser","emitter","toggleActions","showActionsList","removeOptionsFromStatus","Form","ActionPlan","statusRemovedOptions","init","alias","mountComponents","isOriginFromRisks","btnRemoveRef","btnEditRef","VirtualTable","table","tagName","isMultivalue","btnInsert","getOrquestraTable","rowRef","rows","setRows","handleActionAndEmpty","getRowData","addVRow","append","rowData","data","InsertNewRow","getTableRow","addTableRow","rowIndex","resolveRowIndex","vRow","getVRow","tableRow","template","newVRow","addRowTriggers","populateTableRow","clear","clearTable","btn","_vtable","removeEmptyRow","isEmpty","every","index","children","defaultTrigger","onEdit","preventDefault","stopPropagation","lastElementChild","Number","isInteger","hideElement","showElement","action","ListUtil","emptyList","vTable","onEditCard","onRemove","onRemoveCard","onConfirm","onSaveCard","ActionList","setAlertDate","alertInterval","alertDate","date","quantity","newDate","Date","setDate","getDate","addDays","toLocaleDateString","formatDate","DrawerForm","drawer","duedate","assigneeCodUser","datepicker","language","format","autocomplete","btnConfirm","disabled","onFormFilling","isFilled","some","drawerOpenClass","fieldRef","titleRef","openRef","closeRef","confirmRef","removeRef","enableRemove","closeOnClickOutside","confirmText","bsDatepickerClass","Drawer","undefined","btnOpen","btnClose","btnRemove","drawerTitle","pageBody","isOpen","defaultProps","title","onConclude","open","close","populate","handleConfirm","setProps","_drawer","confirmRes","Promise","handleConfirmDone","resolve","onClickOutside","path","el","contains","overflow","removeEventListener","DrawerStatic","DrawerRemote","risksFields","formatFieldToObject","ActionDrawer","hiddenClass","FieldToggler","parentElement","togglerField","appendChild","confirmBtn","togglerLabel","togglerTemplate","firstElementChild","showLabel","handleEmptyValue","_fieldToggler","fieldsTemplates","ActionForm","tableFields","formFields","finishedAt","finishedAtId","updateTableValue","toggleFinishedAt","handleFormTogglers","Action","mitt"],"mappings":"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","file":"app.bundle.0a160.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","class ComponentError extends Error {\r\n  constructor ({ name, message, type, errors } = {}) {\r\n    super()\r\n\r\n    this.name = name || 'ComponentError'\r\n    this.message = message\r\n    this.type = type\r\n  }\r\n}\r\n\r\nexport default ComponentError\r\n","export default function CreateCard (props) {\r\n  props = {\r\n    removeable: false,\r\n    editable: false,\r\n    ...props\r\n  }\r\n\r\n  return `\r\n<div class=\"stack\">\r\n  <div class=\"stack-actions\">\r\n    ${props.removeable ? removeBtn : ''}\r\n    ${props.editable ? editBtn : ''}\r\n  </div>\r\n  <h1 class=\"stack-title\">${props.acaoTitulo}</h1>\r\n  <p>${props.acaoDescricao}</p>\r\n  <div class=\"stack-footer\">\r\n    <div class=\"columns -auto -align-center\">\r\n      <div class=\"column -grow\">\r\n        ${getStatusTag(props.acaoStatus)}\r\n      </div>\r\n      <div class=\"column\">\r\n        <i class=\"stack-label-icon fas fa-user\"></i>\r\n        <span class=\"stack-label\">${props.acaoResponsavel}</span>\r\n      </div>\r\n      <div class=\"column\">\r\n        <i class=\"stack-label-icon fas fa-bell\"></i>\r\n        <span class=\"stack-label\">${props.acaoMonitoramento} dias</span>\r\n      </div>\r\n      <div class=\"column\">\r\n        <i class=\"stack-label-icon fas fa-calendar\"></i>\r\n        <span class=\"stack-label\">${getActionDate(props.acaoPrazo, props.acaoTermino)}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n`\r\n}\r\n\r\nconst removeBtn = `\r\n<button class=\"btn btn-link -red btn-small stack-action\" data-vtable-remove>\r\n  <i class=\"btn-icon fas fa-trash\"></i>\r\n  <span>Excluir</span>\r\n</button>\r\n`\r\nconst editBtn = `\r\n<button class=\"btn btn-link btn-small stack-action\" data-vtable-edit>\r\n  <i class=\"btn-icon fas fa-edit\"></i>\r\n  <span>Editar</span>\r\n</button>\r\n`\r\n\r\nexport function getStatusTag (status = '') {\r\n  const text = status\r\n  status = status.toLowerCase()\r\n\r\n  if (status === 'em andamento') {\r\n    return `\r\n    <div class=\"tag -blue\">\r\n      <i class=\"tag-icon fas fa-play-circle\"></i>${text}\r\n    </div>\r\n    `\r\n  }\r\n\r\n  if (status === 'pausada') {\r\n    return `\r\n    <div class=\"tag -yellow\">\r\n      <i class=\"tag-icon fas fa-pause-circle\"></i>${text}\r\n    </div>\r\n    `\r\n  }\r\n\r\n  if (status === 'não iniciada') {\r\n    return `\r\n    <div class=\"tag\">\r\n      <i class=\"tag-icon fas fa-minus-circle\"></i>${text}\r\n    </div>\r\n    `\r\n  }\r\n\r\n  if (status === 'concluída') {\r\n    return `\r\n    <div class=\"tag -green\">\r\n      <i class=\"tag-icon fas fa-check-circle\"></i>${text}\r\n    </div>\r\n    `\r\n  }\r\n\r\n  if (status === 'cancelada') {\r\n    return `\r\n    <div class=\"tag -red\">\r\n      <i class=\"tag-icon fas fa-times-circle\"></i>${text}\r\n    </div>\r\n    `\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nfunction getActionDate (dueDate, doneDate) {\r\n  if (doneDate) {\r\n    return doneDate\r\n  }\r\n\r\n  return dueDate\r\n}\r\n","const ORQUESTRA_BASE_URL = process.env.ORQUESTRA_BASE_URL\nconst ORQUESTRA_REST_PATH = process.env.ORQUESTRA_REST_PATH\nconst ORQUESTRA_SOAP_PATH = process.env.ORQUESTRA_SOAP_PATH\nconst DATASOURCE_BASE_URL = process.env.DATASOURCE_BASE_URL\nconst DATASOURCE_ACTIONS = process.env.DATASOURCE_ACTIONS\nconst ORQUESTRA_ACTION_PLAN_CODFLOW = process.env.ORQUESTRA_ACTION_PLAN_CODFLOW\nconst ORQUESTRA_ACTION_CODFLOW = process.env.ORQUESTRA_ACTION_CODFLOW\nconst ORQUESTRA_ACTION_ELEMENT_ALIAS = process.env.ORQUESTRA_ACTION_ELEMENT_ALIAS\n\nconst ORQUESTRA_SOAP_UPDATE_FORM =\n  `${ORQUESTRA_BASE_URL}${ORQUESTRA_SOAP_PATH}/instance.asmx/UpdateForm01`\n\nconst ORQUESTRA_REST_INSTANCES =\n  `${ORQUESTRA_BASE_URL}${ORQUESTRA_REST_PATH}/instances`\n\nconst ORQUESTRA_DATASOURCE_ACTIONS =\n  `${DATASOURCE_BASE_URL}${DATASOURCE_ACTIONS}`\n\n/**\n * 🔑 Public Methods\n */\nconst getActions = function ({ codFlowExecute }) {\n  const url = new URL(ORQUESTRA_DATASOURCE_ACTIONS)\n\n  const params = {\n    inpCodFlowExecuteStarter: codFlowExecute\n  }\n\n  url.search = new URLSearchParams(params).toString()\n\n  return fetch(url)\n    .then(res => res.json())\n    .then(({ success }) =>\n      success.reduce(parseData, {})\n    )\n}\n\nconst createAction = function (props) {\n  const {\n    token,\n    codFlowExecute,\n    formValues\n  } = props\n\n  const payload = {\n    flow: { id: parseInt(ORQUESTRA_ACTION_CODFLOW) },\n    values: formValuesToRestFormat(formValues),\n    CodFlowExecuteParent: parseInt(codFlowExecute),\n    CodFlowParent: parseInt(ORQUESTRA_ACTION_PLAN_CODFLOW),\n    DsFlowElementAlias: ORQUESTRA_ACTION_ELEMENT_ALIAS,\n    simulation: false\n  }\n\n  const url = ORQUESTRA_REST_INSTANCES\n\n  return fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(payload),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(res => res.json())\n}\n\nconst updateActionsList = function (props) {\n  const {\n    codFlowExecute,\n    formValues,\n    token\n  } = props\n\n  const payload = {\n    token,\n    codFlowExecute,\n    XmlValues: formValuesToSoapFormat(formValues)\n  }\n\n  const url = ORQUESTRA_SOAP_UPDATE_FORM\n\n  return fetch(url, {\n    method: 'POST',\n    body: formatSoapPayload(payload),\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\n    }\n  })\n    .then(res => res.text())\n    .then(xmlString => $.parseXML(xmlString))\n}\n\nexport default {\n  getActions,\n  createAction,\n  updateActionsList\n}\n\n/**\n * 🔒 Private Methods\n */\nconst parseData = (actions, row) => {\n  const { fields, txt } = row\n\n  if (!actions[txt]) {\n    actions[txt] = {}\n  }\n\n  actions[txt][fields.id] = fields.value\n\n  return actions\n}\n\nconst formValuesToRestFormat = formValues =>\n  Object.entries(formValues)\n    .map(([name, value]) => ({ name, value }))\n\nconst formatObjectToXmlString = formValues =>\n  Object.entries(formValues)\n    .map(([id, value]) => {\n      if (Array.isArray(value)) {\n        return value\n          .map(formatObjectToXmlString)\n          .join('')\n      } else {\n        return `<${id}><![CDATA[${value}]]></${id}>`\n      }\n    })\n    .join('')\n\nconst formValuesToSoapFormat = formValues => {\n  const fields = formatObjectToXmlString(formValues)\n\n  return `<form>${fields}</form>`\n}\n\nconst formatSoapPayload = payload =>\n  Object.entries(payload)\n    .map(([prop, value]) => `${prop}=${value}`)\n    .join('&')\n","import ActionsService from '../api/api.actions'\r\nimport CreateCard from './list-card'\r\n\r\nconst ListRemote = function () {\r\n  const $refs = {\r\n    section: document.querySelector('#section-actions'),\r\n    vtable: document.querySelector('#actions-list'),\r\n    codFlowExecute: document.querySelector('#inpCodFlowExecute')\r\n  }\r\n\r\n  const state = {\r\n    codFlowExecute: $refs.codFlowExecute.value\r\n  }\r\n\r\n  return {\r\n    mount\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function mount () {\r\n    getActions(state.codFlowExecute)\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function getActions (codFlowExecute) {\r\n    addLoadingtState()\r\n\r\n    ActionsService.getActions({\r\n      codFlowExecute\r\n    })\r\n      .then(render)\r\n      .finally(removeLoadingState)\r\n  }\r\n\r\n  function render (actions) {\r\n    const markup = Object.values(actions)\r\n      .map(CreateCard)\r\n      .join('')\r\n\r\n    $refs.vtable\r\n      .insertAdjacentHTML('beforeend', markup)\r\n  }\r\n\r\n  function addLoadingtState () {\r\n    $refs.section.classList.add('-loading')\r\n    $refs.vtable.classList.add('-loading')\r\n  }\r\n\r\n  function removeLoadingState () {\r\n    $refs.section.classList.remove('-loading')\r\n    $refs.vtable.classList.remove('-loading')\r\n  }\r\n}\r\n\r\nexport default ListRemote()\r\n","import ComponentError from '../helpers/component-error'\r\n\r\nconst defaults = {\r\n  ref: '[data-text-bind]',\r\n  filters: getDefaultFilters()\r\n}\r\n\r\nexport default function Binder (params) {\r\n  params = {\r\n    ...defaults,\r\n    ...params,\r\n    name: 'Binder'\r\n  }\r\n\r\n  const elements = document.querySelectorAll(params.ref)\r\n\r\n  const instance = {\r\n    elements,\r\n    update,\r\n    updateAll\r\n  }\r\n\r\n  elements.forEach(mount)\r\n\r\n  return instance\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function mount (element) {\r\n    const { id, filter, field } = getRefs(element)\r\n\r\n    if (!field) {\r\n      throw new ComponentError({\r\n        name: params.name,\r\n        message:\r\n        `Erro ao montar componente.\\nNenhum campo do Orquestra encontrado para a referência ${id}`,\r\n        type: 'field_not_found'\r\n      })\r\n    }\r\n\r\n    setValue({ element, field, filter })\r\n\r\n    // attach listener using jQuery to workaround bootstrap-datepicker\r\n    // not triggering native `change` event.\r\n    $(field).on('change', e => {\r\n      setValue({ element, field, filter })\r\n    })\r\n  }\r\n\r\n  function getRefs (element) {\r\n    const id = element.dataset.textBind\r\n    const filter = element.dataset.textFilter\r\n    const field = document.querySelector(`[xname=inp${id}]`)\r\n\r\n    return {\r\n      id,\r\n      filter,\r\n      field\r\n    }\r\n  }\r\n\r\n  function setValue ({ element, field, filter }) {\r\n    const hasFilter = filter && params.filters[filter]\r\n    const value = hasFilter\r\n      ? params.filters[filter](field.value)\r\n      : field.value\r\n\r\n    element.innerHTML = value\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function update (element) {\r\n    const { filter, field } = getRefs(element)\r\n\r\n    if (!field) {\r\n      return\r\n    }\r\n\r\n    setValue({ element, field, filter })\r\n  }\r\n\r\n  function updateAll () {\r\n    instance.elements\r\n      .forEach(element => {\r\n        const { filter, field } = getRefs(element)\r\n        setValue({ element, field, filter })\r\n      })\r\n  }\r\n}\r\n\r\n/**\r\n * Helpers\r\n */\r\nfunction getDefaultFilters () {\r\n  return {\r\n    cnpj (value) {\r\n      return value.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d)/, '$1.$2.$3/$4-$5')\r\n    },\r\n\r\n    titleCase (value) {\r\n      return value\r\n        .toLowerCase()\r\n        .split(' ')\r\n        .map(word => {\r\n          return word.charAt(0).toUpperCase() + word.slice(1)\r\n        }).join(' ')\r\n    },\r\n\r\n    empty (value) {\r\n      if (value === null || value === '') {\r\n        return 'Não informado'\r\n      }\r\n      return value\r\n    }\r\n  }\r\n}\r\n","import Binder from '../../components/binder'\r\n\r\nconst ActionsRisks = function () {\r\n  const $refs = {\r\n    section: document.querySelector('#section-risks')\r\n  }\r\n\r\n  return {\r\n    mount\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function mount () {\r\n    Binder({\r\n      filters: {\r\n        arrow: getArrowByLevel,\r\n        treatmentIcon: getTreatmentIcon\r\n      }\r\n    })\r\n\r\n    showRisksHeader()\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function showRisksHeader () {\r\n    $refs.section\r\n      .classList.remove('u-hidden')\r\n  }\r\n}\r\n\r\nexport default ActionsRisks()\r\n\r\n/**\r\n * 💡 Helpers\r\n */\r\nfunction getArrowByLevel (level) {\r\n  let icon = null\r\n  const text = level\r\n  level = level.toLowerCase()\r\n\r\n  if (level === 'baixo' || level === 'baixa') {\r\n    icon = '<i class=\"fas fa-long-arrow-alt-down u-color-blue-300\"></i>'\r\n  }\r\n\r\n  if (level === 'médio' || level === 'média') {\r\n    icon = '<i class=\"fas fa-minus u-color-grey-500\"></i>'\r\n  }\r\n\r\n  if (level === 'alto' || level === 'alta') {\r\n    icon = '<i class=\"fas fa-long-arrow-alt-up u-color-blue-700\"></i>'\r\n  }\r\n\r\n  return `${icon} ${text}`\r\n}\r\n\r\nfunction getTreatmentIcon (treatment) {\r\n  if (treatment === 'Explorar') {\r\n    return '<i class=\"fas fa-mountain\"></i>'\r\n  }\r\n\r\n  if (treatment === 'Mitigar') {\r\n    return '<i class=\"fas fa-umbrella\"></i>'\r\n  }\r\n\r\n  if (treatment === 'Monitorar') {\r\n    return '<i class=\"fas fa-heartbeat\"></i>'\r\n  }\r\n\r\n  if (treatment === 'Transferir') {\r\n    return '<i class=\"fas fa-share\"></i>'\r\n  }\r\n\r\n  if (treatment === 'Aceitar') {\r\n    return '<i class=\"fas fa-check-double\"></i>'\r\n  }\r\n\r\n  if (treatment === 'Evitar') {\r\n    return '<i class=\"fas fa-exclamation-triangle\"></i>'\r\n  }\r\n\r\n  return null\r\n}\r\n","//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n                                                               \n\n// An array of all currently registered event handlers for a type\n                                            \n                                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                 \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).slice().map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).slice().map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nexport default mitt;\n//# sourceMappingURL=mitt.es.js.map\n","import ComponentError from '../helpers/component-error'\r\n\r\nconst COD_FLOW = document.getElementById('inpCodFlow')\r\nconst COD_FLOW_EXECUTE = document.getElementById('inpCodFlowExecute')\r\nconst COD_FLOW_EXECUTE_MASTER = document.getElementById('inpCodFlowExecuteMaster')\r\nconst COD_FLOW_EXECUTE_TASK = document.getElementById('inpCodFlowExecuteTask')\r\nconst COD_FLOW_EXECUTE_TASK_POSITION = document.getElementById('inpCodFlowExecuteTaskPosition')\r\nconst COD_FLOW_EXECUTE_C = document.getElementById('inpCodFlowExecuteC')\r\nconst ASSOCIATE_TO_COD_FLOW = document.getElementById('inpAssociateToCodFlow')\r\nconst ASSOCIATE_TO_COD_FLOW_EXECUTE = document.getElementById('inpAssociateToCodFlowExecute')\r\nconst COD_TASK = document.getElementById('inpCodFlowElement')\r\nconst TASK_ALIAS = document.getElementById('inpDsFlowElementAlias')\r\nconst IS_SIMULATION = document.getElementById('inpStSimulation')\r\nconst USER_TOKEN = document.getElementById('inpToken')\r\n\r\nconst OrquestraData = {\r\n  codFlow: getInputValue(COD_FLOW),\r\n  codFlowExecute: getInputValue(COD_FLOW_EXECUTE),\r\n  codFlowExecuteMaster: getInputValue(COD_FLOW_EXECUTE_MASTER),\r\n  codFlowExecuteTask: getInputValue(COD_FLOW_EXECUTE_TASK),\r\n  codFlowExecuteTaskPosition: getInputValue(COD_FLOW_EXECUTE_TASK_POSITION),\r\n  codFlowExecuteC: getInputValue(COD_FLOW_EXECUTE_C),\r\n  associateToCodFlow: getInputValue(ASSOCIATE_TO_COD_FLOW),\r\n  associateToCodFlowExecute: getInputValue(ASSOCIATE_TO_COD_FLOW_EXECUTE),\r\n  codTask: getInputValue(COD_TASK),\r\n  taskAlias: getInputValue(TASK_ALIAS),\r\n  isSimulation: getInputValue(IS_SIMULATION),\r\n  userToken: getInputValue(USER_TOKEN)\r\n}\r\n\r\nconst params = {\r\n  name: 'Form',\r\n  container: '.form-group',\r\n  hideClass: 'u-hidden'\r\n}\r\n\r\n/**\r\n * 💡 Helper Functions\r\n */\r\nfunction getInputValue (inputValue) {\r\n  return inputValue\r\n    ? inputValue.value\r\n    : null\r\n}\r\n\r\n/**\r\n * 🔑 Public Methods\r\n */\r\nfunction on (target, callback) {\r\n  if (typeof target !== 'string' && !Array.isArray(target)) {\r\n    throw new ComponentError({\r\n      name: params.name,\r\n      message:\r\n      `Erro ao criar o evento 'on', \\n${target} não é um parâmetro válido. Você deve utilizar como target somente strings ou arrays de strings.`,\r\n      type: 'invalid_target_for_on_event'\r\n    })\r\n  }\r\n\r\n  if (typeof callback !== 'function') {\r\n    throw new ComponentError({\r\n      name: params.name,\r\n      message:\r\n      `Erro ao criar o evento 'on', \\n${callback} não é um parâmetro válido. Você deve utilizar como callback somente funções.`,\r\n      type: 'invalid_callback_for_on_event'\r\n    })\r\n  }\r\n\r\n  const targets = typeof target === 'string'\r\n    ? [target]\r\n    : target\r\n\r\n  if (targets.includes(OrquestraData.taskAlias)) {\r\n    callback(OrquestraData.taskAlias)\r\n  }\r\n}\r\n\r\nfunction conditionals (context = document, helperClass = 'u-hidden') {\r\n  context\r\n    .querySelectorAll('[data-if]')\r\n    .forEach(element => {\r\n      const currentAlias = element.dataset.if\r\n        .replace(/[\\s[\\]]/g, '') // remove white spaces and brakets\r\n        .split(',') // splits if it's a list, using comma\r\n\r\n      if (currentAlias.includes(OrquestraData.taskAlias)) {\r\n        element.classList.remove(helperClass)\r\n      } else {\r\n        element.classList.add(helperClass)\r\n      }\r\n    })\r\n}\r\n\r\nfunction getField (fieldId, options = { alwaysArray: false, ref: document }) {\r\n  const fields = options.ref.querySelectorAll(`[xname=inp${fieldId}]`)\r\n\r\n  if (!fields.length) {\r\n    return null\r\n  }\r\n\r\n  if (options.alwaysArray) {\r\n    return [...fields]\r\n  }\r\n\r\n  return fields.length > 1\r\n    ? [...fields]\r\n    : fields[0]\r\n}\r\n\r\nfunction clearField (fieldId, ref) {\r\n  const changeEvent = new Event('change')\r\n  const fields = getField(fieldId, { alwaysArray: true, ref })\r\n\r\n  fields.forEach(field => {\r\n    const fieldType = field.type\r\n\r\n    if (['text', 'textarea', 'select-one', 'hidden'].includes(fieldType)) {\r\n      field.value = ''\r\n    } else {\r\n      field.checked = false\r\n    }\r\n\r\n    field.dispatchEvent(changeEvent)\r\n  })\r\n}\r\n\r\nfunction addRequired (fieldId, ref = document) {\r\n  const fields = getField(fieldId, { alwaysArray: true, ref })\r\n\r\n  if (!fields) {\r\n    return console.error(`[Form] Unable to add required. Field reference ${fieldId} not found`)\r\n  }\r\n\r\n  fields.forEach(field => {\r\n    field.setAttribute('required', 'S')\r\n    field.removeAttribute('data-was-required')\r\n  })\r\n}\r\n\r\nfunction removeRequired (fieldId, ref = document) {\r\n  const fields = getField(fieldId, { alwaysArray: true, ref })\r\n\r\n  if (!fields) {\r\n    return console.error(`[Form] Unable to remove required. Field reference ${fieldId} not found`)\r\n  }\r\n\r\n  fields.forEach(field => {\r\n    field.setAttribute('required', 'N')\r\n    field.setAttribute('data-was-required', true)\r\n  })\r\n}\r\n\r\nfunction showField (fieldId, container = params.container, ref = document) {\r\n  const fields = getField(fieldId, { alwaysArray: true, ref })\r\n  const $container = fields[0].closest(container)\r\n  const isRequired = fields\r\n    .filter(field => field.getAttribute('data-was-required')).length > 0\r\n\r\n  $container.classList.remove(params.hideClass)\r\n\r\n  if (isRequired) {\r\n    addRequired(fieldId, ref)\r\n  }\r\n}\r\n\r\nfunction hideField (fieldId, container = params.container, ref = document) {\r\n  const fields = getField(fieldId, { alwaysArray: true, ref })\r\n  const $container = fields[0].closest(container)\r\n  const isRequired = fields\r\n    .filter(field => field.getAttribute('required') === 'S').length > 0\r\n\r\n  $container.classList.add(params.hideClass)\r\n  clearField(fieldId, ref)\r\n\r\n  if (isRequired) {\r\n    removeRequired(fieldId, ref)\r\n  }\r\n}\r\n\r\nfunction hideTable (tableRef) {\r\n  const $table = document.querySelector(tableRef)\r\n\r\n  $table.querySelectorAll('[xname]')\r\n    .forEach(field => {\r\n      const fieldId = field.getAttribute('xname').substring(3)\r\n      hideField(fieldId, 'tr', $table)\r\n    })\r\n\r\n  $table.classList.add(params.hideClass)\r\n}\r\n\r\nfunction showTable (tableRef) {\r\n  const $table = document.querySelector(tableRef)\r\n\r\n  $table.querySelectorAll('[xname]')\r\n    .forEach(field => {\r\n      const fieldId = field.getAttribute('xname').substring(3)\r\n      showField(fieldId, 'tr', $table)\r\n    })\r\n\r\n  $table.classList.remove(params.hideClass)\r\n}\r\n\r\nfunction getFieldValue (fieldId) {\r\n  const fields = getField(fieldId, { alwaysArray: true })\r\n  const fieldType = fields[0].type\r\n\r\n  if (['text', 'textarea', 'select-one', 'hidden'].includes(fieldType)) {\r\n    return fields[0].value\r\n  }\r\n\r\n  if (fieldType === 'radio') {\r\n    const checkedField = fields.find(field => field.checked)\r\n\r\n    return checkedField\r\n      ? checkedField.value\r\n      : null\r\n  }\r\n\r\n  if (fieldType === 'checkbox') {\r\n    const checkedFields = fields\r\n      .filter(field => field.checked)\r\n      .map(field => field.value)\r\n\r\n    return checkedFields.length\r\n      ? checkedFields\r\n      : null\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nfunction handler ({ target, events }, callback) {\r\n  const fields = getField(target, { alwaysArray: true })\r\n  const arrEvents = typeof events === 'string'\r\n    ? [events]\r\n    : events\r\n\r\n  if (!callback) {\r\n    return console.error('[Form] Unable to attach handler. You must inform a callback param')\r\n  }\r\n\r\n  fields.forEach(field => {\r\n    arrEvents.forEach(event => {\r\n      field.addEventListener(event, resolveCallbacks)\r\n    })\r\n  })\r\n\r\n  resolveCallbacks()\r\n\r\n  function resolveCallbacks () {\r\n    const values = getFieldValue(target)\r\n    callback(values)\r\n  }\r\n}\r\n\r\n/**\r\n * 🔑 Public API\r\n */\r\nexport default {\r\n  ...OrquestraData,\r\n  on,\r\n  conditionals,\r\n  getField,\r\n  getFieldValue,\r\n  clearField,\r\n  addRequired,\r\n  removeRequired,\r\n  showField,\r\n  hideField,\r\n  showTable,\r\n  hideTable,\r\n  handler\r\n}\r\n","import ComponentError from './component-error'\r\n\r\nexport default function resolveReference (reference, component) {\r\n  // Any QuerySelector string\r\n  // e.g. 'div > .class'\r\n  if (typeof reference === 'string') {\r\n    let elements\r\n\r\n    try {\r\n      elements = [...document.querySelectorAll(reference)]\r\n    } catch (error) {\r\n      throw new ComponentError({\r\n        name: component,\r\n        message:\r\n        `Erro ao inicializar a instância do componente.\\n${reference} não é um seletor válido`,\r\n        type: 'reference_queryselector_validation'\r\n      })\r\n    }\r\n\r\n    if (!elements.length) {\r\n      throw new ComponentError({\r\n        name: component,\r\n        message:\r\n        `Erro ao inicializar a instância do componente.\\nNão foi encontrado nenhum elemento para o seletor ${reference}`,\r\n        type: 'reference_queryselector_empty'\r\n      })\r\n    }\r\n\r\n    return elements\r\n  }\r\n\r\n  // Single HTML Elements\r\n  // e.g. document.querySelector('div')\r\n  if (reference instanceof HTMLElement) {\r\n    return reference\r\n  }\r\n\r\n  // HTML Collection and Node List\r\n  // HTMLCollection: e.g. document.getElementsByClassName('myClass')\r\n  // NodeList: e.g. document.querySelectorAll('div')\r\n  if (reference instanceof HTMLCollection) {\r\n    return [...reference]\r\n  }\r\n\r\n  // Array of HTML Elements\r\n  // e.g. [document.querySelector('#a'), document.querySelector('#b')]\r\n  if (Array.isArray(reference)) {\r\n    if (!reference.length) {\r\n      throw new ComponentError({\r\n        name: component,\r\n        message:\r\n        'Erro ao inicializar a instância do componente.\\nVocê não pode chamar o construtor com array vazio',\r\n        type: 'reference_array_empty'\r\n      })\r\n    }\r\n\r\n    reference.forEach(element => {\r\n      if (!(element instanceof HTMLElement)) {\r\n        throw new ComponentError({\r\n          name: component,\r\n          message:\r\n          'Erro ao inicializar a instância do componente\\nVocê não pode chamar o construtor com arrays que possuam elementos diferentes de HTMLElement',\r\n          type: 'reference_array_validation'\r\n        })\r\n      }\r\n    })\r\n\r\n    return reference\r\n  }\r\n\r\n  throw new ComponentError({\r\n    name: component,\r\n    message:\r\n    'Erro ao inicializar a instância do componente.\\nVocê deve chamar o construtor com strings (seletores CSS), HTMLElement, HTMLElement[], HTMLCollection ou NodeList',\r\n    type: 'reference_invalid_type'\r\n  })\r\n}\r\n","export function removeOptionPrefix (option, splitSeparator) {\r\n  return option\r\n    .split(splitSeparator)[1]\r\n    .trim()\r\n}\r\n","import ComponentError from '../helpers/component-error'\r\nimport resolveReference from '../helpers/component-reference'\r\nimport { removeOptionPrefix } from '../helpers/component-helpers'\r\n\r\nconst defaults = {\r\n  groupClass: 'btn-radio-group',\r\n  btnClass: 'btn-radio',\r\n  activeClass: '-active',\r\n  hidePrefix: false,\r\n  splitSeparator: '.'\r\n}\r\n\r\nexport default function ButtonRadio (reference, params) {\r\n  params = {\r\n    ...defaults,\r\n    ...params,\r\n    name: 'ButtonRadio'\r\n  }\r\n\r\n  const elements = resolveReference(reference, params.name)\r\n\r\n  if (elements instanceof HTMLElement) {\r\n    const [element] = elements\r\n    return createInstance(element, params)\r\n  }\r\n\r\n  return elements\r\n    .map(element => createInstance(element, params))\r\n    .filter(element => element !== undefined)\r\n}\r\n\r\nfunction createInstance (element, params) {\r\n  const changeEvent = new Event('change')\r\n  const {\r\n    select,\r\n    textvalue\r\n  } = getOrquestraField(element, params)\r\n\r\n  if (textvalue && params.hidePrefix) {\r\n    removeTextPrefix(textvalue)\r\n  }\r\n\r\n  if (!select) {\r\n    return\r\n  }\r\n\r\n  const { buttons, buttonGroup } = createButtonGroup(select, params)\r\n\r\n  const state = {\r\n    value: '',\r\n    isEnable: true\r\n  }\r\n\r\n  const instance = {\r\n    state,\r\n    element,\r\n    select,\r\n    buttonGroup,\r\n    buttons: [...buttons],\r\n    reset,\r\n    set,\r\n    get\r\n  }\r\n\r\n  addListners(buttons, select)\r\n\r\n  if (select.value !== '') {\r\n    set(select.value, true)\r\n  }\r\n\r\n  element._buttonGroup = instance\r\n\r\n  return instance\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function addListners (buttons, select) {\r\n    buttons\r\n      .forEach(button => {\r\n        button.addEventListener('click', onClick)\r\n      })\r\n\r\n    select.addEventListener('change', onChange)\r\n  }\r\n\r\n  function onChange () {\r\n    const value = this.value\r\n\r\n    if (value === '') {\r\n      reset()\r\n    } else {\r\n      set(value, true)\r\n    }\r\n  }\r\n\r\n  function onClick (e, silent) {\r\n    const option = this.dataset.option\r\n\r\n    reset()\r\n\r\n    this.classList.add(params.activeClass)\r\n    instance.select.value = option\r\n    state.value = option\r\n\r\n    if (!silent) {\r\n      instance.select.dispatchEvent(changeEvent)\r\n    }\r\n  }\r\n\r\n  function removeTextPrefix (textvalue) {\r\n    const value = removeOptionPrefix(textvalue.textContent, params.splitSeparator)\r\n    textvalue.textContent = value\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   * @todo Destroy / ShowOption / HideOption / Disable (readonly) / Enable / TextOnly\r\n   */\r\n  function reset () {\r\n    state.value = ''\r\n    instance.select.value = ''\r\n    instance.buttons\r\n      .forEach(button => {\r\n        button.classList.remove(params.activeClass)\r\n      })\r\n  }\r\n\r\n  function set (option, silent = false) {\r\n    const button = instance.buttons\r\n      .find(button => button.dataset.option === option)\r\n\r\n    if (!button) {\r\n      throw new ComponentError({\r\n        name: params.name,\r\n        message:\r\n        `Erro ao realizar set para novo valor.\\nNão foi encontrada nenhuma opção para o valor ${option}`,\r\n        type: 'option_not_found'\r\n      })\r\n    }\r\n\r\n    onClick.call(button, null, silent)\r\n  }\r\n\r\n  function get () {\r\n    return state.value\r\n  }\r\n}\r\n\r\n/**\r\n * 💡 Helper Functions\r\n */\r\n\r\nfunction getOrquestraField (element, params) {\r\n  const select = element.querySelector('select[xname]')\r\n  const textvalue = element.querySelector('div[xid]')\r\n  const inputHidden = element.querySelector('input[type=hidden][xname]')\r\n\r\n  if (!select && !textvalue && !inputHidden) {\r\n    throw new ComponentError({\r\n      name: params.name,\r\n      message:\r\n      'Erro ao criar a instância do componente.\\nNenhum campo do Orquestra encontrado para a referência informada',\r\n      type: 'instace_field_not_found'\r\n    })\r\n  }\r\n\r\n  return {\r\n    select,\r\n    textvalue\r\n  }\r\n}\r\n\r\nfunction createButtonGroup (select, params) {\r\n  const options = getOrquestraFieldOptions(select, params)\r\n  const btnGroupHtml = getButtonGroupMarkup(options, params)\r\n\r\n  select.insertAdjacentHTML('afterend', btnGroupHtml)\r\n  select.style.display = 'none'\r\n\r\n  const buttonGroup = select.nextSibling\r\n  const buttons = buttonGroup.querySelectorAll(`.${params.btnClass}`)\r\n\r\n  return {\r\n    buttonGroup,\r\n    buttons\r\n  }\r\n}\r\n\r\nfunction getOrquestraFieldOptions (select, params) {\r\n  return [...select.options]\r\n    .filter(option => option.value)\r\n    .map(option => {\r\n      const value = option.value\r\n      const label = params.hidePrefix\r\n        ? removeOptionPrefix(value, params.splitSeparator)\r\n        : value\r\n\r\n      return { value, label }\r\n    })\r\n}\r\n\r\nfunction getButtonGroupMarkup (options, { groupClass, btnClass }) {\r\n  const buttons = options\r\n    .map(option => getButtonMarkup(option, btnClass))\r\n\r\n  return `<div class=\"btn-group ${groupClass}\">${buttons.join('')}</div>`\r\n}\r\n\r\nfunction getButtonMarkup ({ value, label }, btnClass) {\r\n  return `<button type=\"button\" class=\"btn ${btnClass}\" data-option=\"${value}\">${label}</button>`\r\n}\r\n","import ActionsRisks from './actions-risks'\r\nimport ActionsForm from './actions-form'\r\n\r\nconst ActionPlan = function () {\r\n  const $refs = {\r\n    origin: document.querySelector('[xname=inpplanoOrigem]')\r\n  }\r\n\r\n  const state = {\r\n    emitter: null,\r\n    statusRemovedOptions: [\r\n      'Cancelada',\r\n      'Concluída'\r\n    ]\r\n  }\r\n\r\n  return {\r\n    init\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function init ({ alias, emitter }) {\r\n    const mountComponents = [\r\n      'criacao',\r\n      'acoes',\r\n      'monitoramento',\r\n      'novoResponsavelPlano',\r\n      'report',\r\n      'avaliacao',\r\n      'novoResponsavel'\r\n    ].includes(alias)\r\n\r\n    state.emitter = emitter\r\n    state.alias = alias\r\n    state.isOriginFromRisks = $refs.origin.value === 'riscos'\r\n\r\n    if (mountComponents) {\r\n      mount()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function mount () {\r\n    const { emitter } = state\r\n\r\n    if (state.isOriginFromRisks) {\r\n      ActionsRisks.mount()\r\n    }\r\n\r\n    if (state.alias === 'criacao') {\r\n      ActionsForm.mount({ emitter })\r\n    }\r\n\r\n    if ([\r\n      'acoes',\r\n      'monitoramento'\r\n    ].includes(state.alias)) {\r\n      ActionsForm.showActionsList()\r\n    }\r\n\r\n    ActionsForm\r\n      .removeOptionsFromStatus(state.statusRemovedOptions)\r\n  }\r\n}\r\n\r\nexport default ActionPlan()\r\n","import Form from '../../components/form'\r\n\r\nconst ActionsForm = function () {\r\n  const $refs = {\r\n    section: document.querySelector('#section-actions'),\r\n    isAssignee: document.querySelector('[xname=inpresponsavelPeloPlano]'),\r\n    status: document.querySelector('[xname=inpplanoStatus]'),\r\n    assignee: document.querySelector('[xname=inpplanoResponsavel]'),\r\n    codUser: document.querySelector('[xname=inpcodplanoResponsavel]'),\r\n    currentAssignee: document.querySelector('[xname=inptempResponsavelPlano]'),\r\n    currentCodUser: document.querySelector('[xname=inpcodtempResponsavelPlano]')\r\n  }\r\n\r\n  const state = {\r\n    tableRef: '#actions-table',\r\n    emitter: null\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    showActionsList,\r\n    removeOptionsFromStatus\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function mount ({ emitter }) {\r\n    state.emitter = emitter\r\n\r\n    $refs.assignee.closest('.form-group')\r\n      .classList.add('u-hidden')\r\n\r\n    $refs.isAssignee\r\n      .addEventListener('change', toggleActions)\r\n\r\n    toggleActions()\r\n  }\r\n\r\n  function showActionsList () {\r\n    $refs.section\r\n      .classList.remove('u-hidden')\r\n  }\r\n\r\n  function removeOptionsFromStatus (options) {\r\n    const $options = $refs.status.querySelectorAll('option')\r\n\r\n    $options.forEach(option => {\r\n      if (options.includes(option.value)) {\r\n        option.remove()\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function toggleActions () {\r\n    const isAssignee = $refs.isAssignee.value\r\n\r\n    if (isAssignee === '1. Sim') {\r\n      Form.showTable(state.tableRef)\r\n      Form.hideField('planoResponsavel')\r\n\r\n      $refs.assignee.value = $refs.currentAssignee.value\r\n      $refs.codUser.value = $refs.currentCodUser.value\r\n\r\n      return showActionsList()\r\n    }\r\n\r\n    if (isAssignee === '2. Não') {\r\n      $refs.assignee.value = ''\r\n\r\n      Form.hideTable(state.tableRef)\r\n      Form.showField('planoResponsavel')\r\n\r\n      state.emitter.emit('list-clear')\r\n\r\n      $refs.section\r\n        .classList.add('u-hidden')\r\n    }\r\n  }\r\n}\r\n\r\nexport default ActionsForm()\r\n","import ComponentError from '../helpers/component-error'\r\n\r\nconst defaults = {\r\n  btnRemoveRef: '[data-vtable-remove]',\r\n  btnEditRef: '[data-vtable-edit]'\r\n}\r\n\r\nexport default function VirtualTable (params) {\r\n  params = {\r\n    ...defaults,\r\n    ...params,\r\n    // @todo avaliar uso ou remover\r\n    rowRef: 'data-vtable',\r\n    name: 'VirtualTable'\r\n  }\r\n\r\n  const {\r\n    table,\r\n    btnInsert\r\n  } = getOrquestraTable(params)\r\n\r\n  const state = {\r\n    rows: []\r\n  }\r\n\r\n  const instance = {\r\n    table,\r\n    btnInsert,\r\n    vtable: params.vtable,\r\n    mount,\r\n    append,\r\n    remove,\r\n    replace,\r\n    clear\r\n  }\r\n\r\n  unwireTableControls()\r\n  setRows()\r\n\r\n  instance.vtable._vtable = instance\r\n\r\n  return instance\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function unwireTableControls () {\r\n    [\r\n      ...instance.table.querySelectorAll('.btn-delete-mv'),\r\n      instance.btnInsert\r\n    ]\r\n      .forEach(btn => btn.removeAttribute('onclick'))\r\n  }\r\n\r\n  function setRows () {\r\n    state.rows = [\r\n      ...instance.table.querySelectorAll('tr:not(.header)')\r\n    ].filter(removeEmptyRow)\r\n\r\n    // state.rows = [\r\n    //   ...instance.table.querySelectorAll('tr:not(.header)')\r\n    // ]\r\n    //   .map(getRowData)\r\n    //   .filter(removeEmptyRow)\r\n  }\r\n\r\n  function getRowData (row) {\r\n    return [\r\n      ...row.querySelectorAll('[xname]')\r\n    ].reduce((fields, field) => {\r\n      const id = field.getAttribute('xname').substring(3)\r\n\r\n      return {\r\n        ...fields,\r\n        [id]: field.value\r\n      }\r\n      // const value = field.value === ''\r\n      //   ? null\r\n      //   : field.value\r\n\r\n      // const isSelect = field.tagName.toLowerCase() === 'select'\r\n\r\n      // const option = isSelect\r\n      //   ? field.querySelector(`option[value=\"${value}\"]`)\r\n      //   : null\r\n\r\n      // const text = isSelect && option\r\n      //   ? field.querySelector(`option[value=\"${value}\"]`).textContent\r\n      //   : field.value\r\n\r\n      // fields[id] = {\r\n      //   id,\r\n      //   value,\r\n      //   text\r\n      // }\r\n      // return fields\r\n    }, {})\r\n  }\r\n\r\n  function removeEmptyRow (row, rowIndex) {\r\n    const rowData = getRowData(row)\r\n    const isEmpty = Object.values(rowData)\r\n      .every(field => !field)\r\n\r\n    if (isEmpty && rowIndex > 0) {\r\n      getTableRow(rowIndex).remove()\r\n    }\r\n\r\n    return !isEmpty\r\n  }\r\n\r\n  // @todo avaliar necessidade...\r\n  // function isTableRowEmpty (row) {\r\n  //   return [...row.querySelectorAll('[xname]')]\r\n  //     .every(field => !field.value)\r\n  // }\r\n\r\n  function getVRow (index) {\r\n    return instance.vtable.children[index]\r\n  }\r\n\r\n  function getTableRow (index) {\r\n    return instance.table\r\n      .querySelector(`tr:nth-child(${index + 2})`)\r\n  }\r\n\r\n  function addRowTriggers (vRow) {\r\n    vRow.querySelectorAll(params.btnRemoveRef)\r\n      .forEach(btn => {\r\n        btn.addEventListener('click', e =>\r\n          defaultTrigger(e, vRow, remove)\r\n        )\r\n      })\r\n\r\n    vRow.querySelectorAll(params.btnEditRef)\r\n      .forEach(btn => {\r\n        btn.addEventListener('click', e =>\r\n          defaultTrigger(e, vRow, params.onEdit)\r\n        )\r\n      })\r\n  }\r\n\r\n  function defaultTrigger (e, vRow, callback) {\r\n    const index = [...instance.vtable.children].indexOf(vRow)\r\n\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n\r\n    callback(index, getRowData(state.rows[index]), vRow)\r\n  }\r\n\r\n  function addTableRow (data) {\r\n    let row\r\n\r\n    if (!state.rows.length) {\r\n      row = getTableRow(0)\r\n    } else {\r\n      InsertNewRow(instance.btnInsert, true)\r\n\r\n      row = instance.table\r\n        .querySelector('tr:last-child')\r\n    }\r\n\r\n    Object.entries(data)\r\n      .forEach(([id, value]) => {\r\n        const field = row.querySelector(`[xname=inp${id}]`)\r\n\r\n        if (field) {\r\n          field.value = value\r\n        }\r\n      })\r\n\r\n    state.rows.push(row)\r\n  }\r\n\r\n  function addVRow (rowData) {\r\n    const markup = params.template(rowData)\r\n\r\n    instance.vtable\r\n      .insertAdjacentHTML('beforeend', markup)\r\n\r\n    const vRow = instance.vtable.lastElementChild\r\n\r\n    vRow.setAttribute(params.rowRef, '')\r\n\r\n    addRowTriggers(vRow)\r\n  }\r\n\r\n  function populateTableRow (row, data) {\r\n    Object.entries(data)\r\n      .forEach(([id, value]) => {\r\n        const field = row.querySelector(`[xname=inp${id}]`)\r\n\r\n        if (field) {\r\n          field.value = value\r\n        }\r\n      })\r\n  }\r\n\r\n  function clearTable () {\r\n    InsertNewRow(instance.btnInsert, true)\r\n\r\n    instance.table\r\n      .querySelectorAll('tr:not(.header):not(:last-child')\r\n      .forEach(row => row.remove())\r\n  }\r\n\r\n  function resolveRowIndex (row) {\r\n    if (Number.isInteger(row)) {\r\n      return row\r\n    }\r\n\r\n    const index = [...instance.vtable.children].indexOf(row)\r\n\r\n    return index >= 0\r\n      ? index\r\n      : null\r\n  }\r\n\r\n  function handleActionAndEmpty () {\r\n    if (params.empty) {\r\n      state.rows.length\r\n        ? hideElement(params.empty)\r\n        : showElement(params.empty)\r\n    }\r\n    if (params.action) {\r\n      state.rows.length\r\n        ? showElement(params.action)\r\n        : hideElement(params.action)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function mount () {\r\n    instance.vtable.innerHTML = null\r\n\r\n    setRows()\r\n    handleActionAndEmpty()\r\n\r\n    state.rows\r\n      .map(getRowData)\r\n      .forEach(addVRow)\r\n  }\r\n\r\n  function append (rowData) {\r\n    addVRow(rowData)\r\n    addTableRow(rowData)\r\n    handleActionAndEmpty()\r\n  }\r\n\r\n  function remove (row) {\r\n    const rowIndex = resolveRowIndex(row)\r\n\r\n    if (rowIndex === null) {\r\n      return\r\n    }\r\n\r\n    getVRow(rowIndex).remove()\r\n\r\n    if (state.rows.length === 1) {\r\n      clearTable()\r\n    } else {\r\n      getTableRow(rowIndex).remove()\r\n    }\r\n\r\n    state.rows.splice(rowIndex, 1)\r\n    handleActionAndEmpty()\r\n  }\r\n\r\n  function replace (row, rowData) {\r\n    const rowIndex = resolveRowIndex(row)\r\n\r\n    if (rowIndex === null) {\r\n      return\r\n    }\r\n\r\n    const vRow = getVRow(rowIndex)\r\n    const tableRow = getTableRow(rowIndex)\r\n    const markup = params.template(rowData)\r\n\r\n    vRow.insertAdjacentHTML('afterend', markup)\r\n    vRow.remove()\r\n\r\n    const newVRow = getVRow(rowIndex)\r\n\r\n    newVRow.setAttribute(params.rowRef, '')\r\n    addRowTriggers(newVRow)\r\n    populateTableRow(tableRow, rowData)\r\n  }\r\n\r\n  function clear () {\r\n    state.rows = []\r\n    instance.vtable.innerHTML = null\r\n\r\n    clearTable()\r\n    handleActionAndEmpty()\r\n  }\r\n}\r\n\r\n/**\r\n * 💡 Helper Functions\r\n */\r\n\r\nfunction showElement (element) {\r\n  if (element) {\r\n    element.classList.remove('u-hidden')\r\n  }\r\n}\r\n\r\nfunction hideElement (element) {\r\n  if (element) {\r\n    element.classList.add('u-hidden')\r\n  }\r\n}\r\n\r\nfunction getOrquestraTable ({ table, name }) {\r\n  const tagName = table.tagName.toLowerCase()\r\n  const isMultivalue = table.getAttribute('mult') === 'S'\r\n  const btnInsert = table.querySelector('#BtnInsertNewRow')\r\n\r\n  if (tagName !== 'table') {\r\n    throw new ComponentError({\r\n      name,\r\n      message:\r\n      'Erro ao iniciar componente.\\nO parâmetro table deve ser uma tabela',\r\n      type: 'table_not_found'\r\n    })\r\n  }\r\n\r\n  if (!isMultivalue) {\r\n    throw new ComponentError({\r\n      name,\r\n      message:\r\n      'Erro ao iniciar componente.\\nO parâmetro table deve ser uma tabela multivalorada',\r\n      type: 'multivalue_table_not_found'\r\n    })\r\n  }\r\n\r\n  return { table, btnInsert }\r\n}\r\n","import VirtualTable from '../../components/virtual-table'\r\nimport CreateCard from './list-card'\r\n\r\nconst ListUtil = function () {\r\n  const $refs = {\r\n    table: document.querySelector('#actions-table'),\r\n    vtable: document.querySelector('#actions-list'),\r\n    emptyList: document.querySelector('#actions-list-empty'),\r\n    action: document.querySelector('#actions-list-action')\r\n  }\r\n\r\n  const state = {\r\n    emitter: null\r\n  }\r\n\r\n  return {\r\n    init,\r\n    mount,\r\n    append,\r\n    clear\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function init ({ emitter }) {\r\n    state.emitter = emitter\r\n\r\n    state.vTable = VirtualTable({\r\n      table: $refs.table,\r\n      vtable: $refs.vtable,\r\n      empty: $refs.emptyList,\r\n      action: $refs.action,\r\n      template: CreateCard,\r\n      onEdit: onEditCard\r\n    })\r\n  }\r\n\r\n  function mount () {\r\n    state.vTable.mount()\r\n  }\r\n\r\n  function append (data) {\r\n    state.vTable.append(data)\r\n  }\r\n\r\n  function clear () {\r\n    state.vTable.clear()\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function onEditCard (index, data, vRow) {\r\n    state.emitter.emit('card-edit', {\r\n      data,\r\n      ref: vRow,\r\n      onRemove: onRemoveCard,\r\n      onConfirm: onSaveCard\r\n    })\r\n  }\r\n\r\n  function onRemoveCard (row) {\r\n    state.vTable.remove(row)\r\n  }\r\n\r\n  function onSaveCard (row, data) {\r\n    state.vTable.replace(row, {\r\n      ...data,\r\n      editable: true,\r\n      removeable: true\r\n    })\r\n  }\r\n}\r\n\r\nexport default ListUtil()\r\n","import ListUtil from './list-util'\r\nimport ListRemote from './list-remote'\r\n\r\nconst ActionList = function () {\r\n  const state = {\r\n    emitter: null\r\n  }\r\n\r\n  return {\r\n    init\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function init ({ alias, emitter }) {\r\n    const mountComponents = [\r\n      'criacao',\r\n      'acoes',\r\n      'monitoramento'\r\n    ].includes(alias)\r\n\r\n    state.emitter = emitter\r\n    state.alias = alias\r\n\r\n    state.emitter.on('list-add', ListUtil.append)\r\n    state.emitter.on('list-clear', ListUtil.clear)\r\n\r\n    if (mountComponents) {\r\n      mount()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function mount () {\r\n    const { emitter } = state\r\n\r\n    ListUtil.init({ emitter })\r\n\r\n    if (\r\n      state.alias === 'criacao' ||\r\n      state.alias === 'acoes'\r\n    ) {\r\n      ListUtil.mount()\r\n    }\r\n\r\n    if (state.alias === 'monitoramento') {\r\n      ListRemote.mount()\r\n    }\r\n  }\r\n}\r\n\r\nexport default ActionList()\r\n","const addDays = (date, quantity) => {\r\n  const newDate = new Date(date)\r\n  newDate.setDate(date.getDate() + parseInt(quantity))\r\n\r\n  return newDate\r\n}\r\n\r\nconst formatDate = date =>\r\n  (date).toLocaleDateString('pt-BR')\r\n\r\n/**\r\n * 🔑 Public Helpers\r\n */\r\nexport function setAlertDate (alertInterval, alertDate) {\r\n  if (alertInterval.value === '') {\r\n    return\r\n  }\r\n\r\n  const date = addDays(new Date(), alertInterval.value)\r\n  alertDate.value = formatDate(date)\r\n}\r\n","import { setAlertDate } from '../action-plan/actions-helpers'\r\n\r\nconst DrawerForm = function () {\r\n  const $refs = {\r\n    drawer: document.querySelector('#actions-drawer'),\r\n    duedate: document.querySelector('[data-name=acaoPrazo]'),\r\n    alertInterval: document.querySelector('[data-name=acaoMonitoramento]'),\r\n    alertDate: document.querySelector('[data-name=acaoMonitoramentoPrazo]'),\r\n    assignee: document.querySelector('[xname=inptempResponsavel]'),\r\n    assigneeCodUser: document.querySelector('[xname=inpcodtempResponsavel]')\r\n  }\r\n\r\n  return {\r\n    mount\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function mount () {\r\n    $refs.alertInterval\r\n      .addEventListener('change', e =>\r\n        setAlertDate(e.target, $refs.alertDate)\r\n      )\r\n\r\n    // TODO: criar component \"só números\" para campo\r\n    // monitoramento\r\n\r\n    // TODO: adicionar tooltip quando botão adicionar\r\n    // estiver com estado disabled\r\n\r\n    setAssigneeRefs()\r\n    mountDatePicker()\r\n    mountFormValidation()\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function setAssigneeRefs () {\r\n    $refs.assignee.setAttribute('data-name', 'acaoResponsavel')\r\n    $refs.assigneeCodUser.setAttribute('data-name', 'codacaoResponsavel')\r\n  }\r\n\r\n  function mountDatePicker () {\r\n    $($refs.duedate)\r\n      .datepicker({\r\n        language: 'pt-BR',\r\n        format: 'dd/mm/yyyy'\r\n      })\r\n\r\n    $refs.duedate.autocomplete = 'off'\r\n  }\r\n\r\n  function mountFormValidation () {\r\n    $refs.btnConfirm = $refs.drawer\r\n      .querySelector('[data-drawer-confirm]')\r\n\r\n    $refs.fields = [\r\n      ...$refs.drawer.querySelectorAll('[data-name]')\r\n    ]\r\n\r\n    $refs.btnConfirm.disabled = true\r\n\r\n    $refs.fields\r\n      .forEach(field => {\r\n        field.addEventListener('keyup', onFormFilling)\r\n        $(field).on('change', onFormFilling)\r\n      })\r\n  }\r\n\r\n  function onFormFilling () {\r\n    const isFilled = isFormFilled()\r\n\r\n    if (isFilled) {\r\n      $refs.btnConfirm.disabled = false\r\n    } else {\r\n      $refs.btnConfirm.disabled = true\r\n    }\r\n  }\r\n\r\n  function isFormFilled () {\r\n    return !$refs.fields\r\n      .some(field => !field.value)\r\n  }\r\n}\r\n\r\nexport default DrawerForm()\r\n","import resolveReference from '../helpers/component-reference'\r\n\r\nconst defaults = {\r\n  drawerOpenClass: '-open',\r\n  fieldRef: 'name',\r\n  titleRef: '[data-drawer-title]',\r\n  openRef: '[data-drawer-open]',\r\n  closeRef: '[data-drawer-close]',\r\n  confirmRef: '[data-drawer-confirm]',\r\n  removeRef: '[data-drawer-remove]',\r\n  enableRemove: false,\r\n  closeOnClickOutside: false,\r\n  confirmText: 'Confirmar',\r\n  bsDatepickerClass: 'datepicker'\r\n}\r\n\r\nexport default function Drawer (reference, params) {\r\n  params = {\r\n    ...defaults,\r\n    ...params,\r\n    name: 'Drawer'\r\n  }\r\n\r\n  const elements = resolveReference(reference, params.name)\r\n\r\n  if (elements instanceof HTMLElement) {\r\n    return createInstance(elements, params)\r\n  }\r\n\r\n  return elements\r\n    .map(element => createInstance(element, params))\r\n    .filter(element => element !== undefined)\r\n}\r\n\r\nfunction createInstance (drawer, params) {\r\n  const changeEvent = new Event('change')\r\n  const btnOpen = document.querySelectorAll(params.openRef)\r\n  const btnClose = drawer.querySelectorAll(params.closeRef)\r\n  const btnConfirm = drawer.querySelector(params.confirmRef)\r\n  const btnRemove = drawer.querySelector(params.removeRef)\r\n  const drawerTitle = drawer.querySelector(params.titleRef)\r\n  const pageBody = document.body\r\n\r\n  const state = {\r\n    isOpen: false,\r\n    ref: null\r\n  }\r\n\r\n  const defaultProps = {\r\n    title: params.title,\r\n    confirmText: params.confirmText,\r\n    enableRemove: params.enableRemove,\r\n    onConfirm: params.onConfirm,\r\n    onConclude: params.onConclude,\r\n    onRemove: params.onRemove\r\n  }\r\n\r\n  const instance = {\r\n    drawer,\r\n    open,\r\n    close,\r\n    populate\r\n  }\r\n\r\n  addTriggers()\r\n  mount()\r\n\r\n  instance.drawer._drawer = instance\r\n\r\n  return instance\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function mount () {\r\n    setProps(defaultProps)\r\n  }\r\n\r\n  function setProps (props) {\r\n    if (props.enableRemove) {\r\n      btnRemove.style.display = 'initial'\r\n    } else {\r\n      btnRemove.style.display = 'none'\r\n    }\r\n\r\n    if (props.ref) {\r\n      state.ref = props.ref\r\n    }\r\n\r\n    if (props.onRemove) {\r\n      state.onRemove = props.onRemove\r\n    }\r\n\r\n    if (props.onConfirm) {\r\n      state.onConfirm = props.onConfirm\r\n    }\r\n\r\n    if (props.onConclude) {\r\n      state.onConclude = props.onConclude\r\n    }\r\n\r\n    drawerTitle.textContent = props.title\r\n    btnConfirm.textContent = props.confirmText\r\n  }\r\n\r\n  function addTriggers () {\r\n    btnOpen.forEach(btn =>\r\n      btn.addEventListener('click', e => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        open(defaultProps)\r\n      })\r\n    )\r\n\r\n    btnClose.forEach(btn =>\r\n      btn.addEventListener('click', e => {\r\n        e.preventDefault()\r\n        close()\r\n      })\r\n    )\r\n\r\n    btnConfirm\r\n      .addEventListener('click', handleConfirm)\r\n\r\n    btnRemove.addEventListener('click', e => {\r\n      e.preventDefault()\r\n\r\n      if (state.onRemove) {\r\n        state.onRemove(state.ref)\r\n        close()\r\n      }\r\n    })\r\n  }\r\n\r\n  function handleConfirm (e) {\r\n    const data = getDrawerData()\r\n\r\n    e.preventDefault()\r\n\r\n    if (state.onConfirm) {\r\n      const confirmRes = state.onConfirm(state.ref, data)\r\n\r\n      addLoadingState()\r\n\r\n      if (Array.isArray(confirmRes)) {\r\n        Promise.all(confirmRes)\r\n          .then(res => handleConfirmDone(res, data))\r\n      } else {\r\n        Promise.resolve(confirmRes)\r\n          .then(res => handleConfirmDone(res, data))\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleConfirmDone (res, data) {\r\n    removeLoadingState()\r\n\r\n    if (state.onConclude) {\r\n      state.onConclude(res, data)\r\n    }\r\n\r\n    close()\r\n  }\r\n\r\n  function handleWindowOnOpen () {\r\n    pageBody.style.overflow = 'hidden'\r\n\r\n    if (params.closeOnClickOutside) {\r\n      pageBody.addEventListener('click', onClickOutside, false)\r\n    }\r\n  }\r\n\r\n  function handleWindowOnClose () {\r\n    pageBody.style.overflow = 'initial'\r\n\r\n    if (params.closeOnClickOutside) {\r\n      pageBody.removeEventListener('click', onClickOutside, false)\r\n    }\r\n  }\r\n\r\n  function onClickOutside (e) {\r\n    const hasPicker = [...e.path]\r\n      .some(el => el.classList\r\n        ? el.classList.contains(params.bsDatepickerClass)\r\n        : false\r\n      )\r\n\r\n    if (hasPicker) {\r\n      return\r\n    }\r\n\r\n    if (!instance.drawer.contains(e.target)) {\r\n      close()\r\n    }\r\n  }\r\n\r\n  function getDrawerData () {\r\n    return [\r\n      ...instance.drawer.querySelectorAll(`[${params.fieldRef}]`)\r\n    ]\r\n      .reduce((fields, field) => {\r\n        const id = field.getAttribute(params.fieldRef)\r\n        return {\r\n          ...fields,\r\n          [id]: field.value\r\n        }\r\n      }, {})\r\n  }\r\n\r\n  function addLoadingState () {\r\n    btnConfirm.classList.add('-loading')\r\n  }\r\n\r\n  function removeLoadingState () {\r\n    btnConfirm.classList.remove('-loading')\r\n  }\r\n\r\n  function clearForm () {\r\n    instance.drawer\r\n      .querySelectorAll(`[${params.fieldRef}]`)\r\n      .forEach(field => {\r\n        field.value = null\r\n        field.dispatchEvent(changeEvent)\r\n      })\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function open (props) {\r\n    instance.drawer.classList.add(params.drawerOpenClass)\r\n    state.open = true\r\n\r\n    if (props) {\r\n      setProps(props)\r\n    }\r\n\r\n    handleWindowOnOpen()\r\n  }\r\n\r\n  function close () {\r\n    instance.drawer.classList.remove(params.drawerOpenClass)\r\n    state.open = false\r\n\r\n    clearForm()\r\n    handleWindowOnClose()\r\n\r\n    // @todo reset scroll to top\r\n    // drawer-body\r\n  }\r\n\r\n  function populate (data) {\r\n    Object.entries(data)\r\n      .forEach(([id, value]) => {\r\n        const field = instance.drawer.querySelector(`[${params.fieldRef}=${id}]`)\r\n\r\n        if (field) {\r\n          field.value = value\r\n          field.dispatchEvent(changeEvent)\r\n        }\r\n      })\r\n  }\r\n}\r\n","import Drawer from '../../components/drawer'\r\n\r\nconst DrawerStatic = function () {\r\n  const $refs = {\r\n    drawer: document.querySelector('#actions-drawer')\r\n  }\r\n\r\n  const state = {\r\n    emitter: null\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    open\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function mount ({ emitter }) {\r\n    state.emitter = emitter\r\n\r\n    state.drawer = Drawer($refs.drawer, {\r\n      onConfirm,\r\n      fieldRef: 'data-name',\r\n      title: 'Adicionar Ação',\r\n      confirmText: 'Adicionar'\r\n    })\r\n  }\r\n\r\n  function open (options) {\r\n    const { data, ...props } = options\r\n\r\n    if (data) {\r\n      state.drawer.populate(data)\r\n    }\r\n\r\n    state.drawer.open({\r\n      title: 'Editar Ação',\r\n      confirmText: 'Salvar',\r\n      enableRemove: true,\r\n      ...props\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function onConfirm (row, data) {\r\n    state.emitter.emit('list-add', {\r\n      ...data,\r\n      editable: true,\r\n      removeable: true\r\n    })\r\n  }\r\n}\r\n\r\nexport default DrawerStatic()\r\n","import Drawer from '../../components/drawer'\nimport ActionsService from '../api/api.actions'\n\nconst DrawerRemote = function () {\n  const $refs = {\n    drawer: document.querySelector('#actions-drawer'),\n    table: document.querySelector('#actions-table'),\n    token: document.querySelector('#inpToken'),\n    codFlowExecute: document.querySelector('#inpCodFlowExecute'),\n    risksFields: [\n      document.querySelector('[xname=inpplanoResponsavel]'),\n      document.querySelector('[xname=inpcodplanoResponsavel]'),\n      document.querySelector('[xname=inpplanoOrigem]'),\n      document.querySelector('[xname=inptipoPlano]'),\n      document.querySelector('[xname=inpperiodoInicio]'),\n      document.querySelector('[xname=inpdepartamento]'),\n      document.querySelector('[xname=inpgerencia]'),\n      document.querySelector('[xname=inpunidade]'),\n      ...document.querySelectorAll('[xname^=inprisco]')\n    ]\n  }\n\n  const state = {\n    emitter: null,\n    token: $refs.token.value,\n    codFlowExecute: $refs.codFlowExecute.value\n  }\n\n  return {\n    mount\n  }\n\n  /**\n   * 🔑 Public Methods\n   */\n  function mount ({ emitter }) {\n    state.emitter = emitter\n    state.drawer = Drawer($refs.drawer, {\n      onConfirm,\n      onConclude,\n      fieldRef: 'data-name',\n      title: 'Adicionar Ação',\n      confirmText: 'Adicionar'\n    })\n  }\n\n  /**\n   * 🔒 Private Methods\n   */\n  function onConfirm (row, data) {\n    return [\n      ActionsService.createAction({\n        formValues: {\n          ...data,\n          ...getRisksData()\n        },\n        token: state.token,\n        codFlowExecute: state.codFlowExecute\n      }),\n      ActionsService.updateActionsList({\n        formValues: {\n          table: [...getActionsData(), data]\n        },\n        token: state.token,\n        codFlowExecute: state.codFlowExecute\n      })\n    ]\n  }\n\n  function onConclude (res, data) {\n    state.emitter.emit('list-add', data)\n  }\n\n  function getActionsData () {\n    return [\n      ...$refs.table.querySelectorAll('tr:not(.header)')\n    ]\n      .map(row =>\n        [...row.querySelectorAll('[xname]')]\n          .reduce(formatFieldToObject, {})\n      )\n  }\n\n  function getRisksData () {\n    return $refs.risksFields\n      .reduce(formatFieldToObject, {})\n  }\n\n  function formatFieldToObject (fields, field) {\n    const id = field.getAttribute('xname').substring(3)\n    const value = field.value\n\n    fields[id] = value\n    return fields\n  }\n}\n\nexport default DrawerRemote()\n","import DrawerForm from './drawer-form'\r\nimport DrawerStatic from './drawer-static'\r\nimport DrawerRemote from './drawer-remote'\r\n\r\nconst ActionDrawer = function () {\r\n  const state = {\r\n    emitter: null\r\n  }\r\n\r\n  return {\r\n    init\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function init ({ alias, emitter }) {\r\n    const mountComponents = [\r\n      'criacao',\r\n      'acoes',\r\n      'monitoramento'\r\n    ].includes(alias)\r\n\r\n    state.emitter = emitter\r\n    state.alias = alias\r\n\r\n    state.emitter.on('card-edit', DrawerStatic.open)\r\n\r\n    if (mountComponents) {\r\n      mount()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function mount () {\r\n    const { emitter } = state\r\n\r\n    DrawerForm.mount()\r\n\r\n    if (\r\n      state.alias === 'criacao' ||\r\n      state.alias === 'acoes'\r\n    ) {\r\n      DrawerStatic.mount({ emitter })\r\n    }\r\n\r\n    if (state.alias === 'monitoramento') {\r\n      DrawerRemote.mount({ emitter })\r\n    }\r\n  }\r\n}\r\n\r\nexport default ActionDrawer()\r\n","import ComponentError from '../helpers/component-error'\r\n\r\nconst defaults = {\r\n  hiddenClass: 'u-hidden'\r\n}\r\n\r\nexport default function FieldToggler (fieldId, params) {\r\n  params = {\r\n    ...defaults,\r\n    ...params,\r\n    name: 'FieldToggler'\r\n  }\r\n\r\n  const field = getOrquestraField(fieldId, params)\r\n\r\n  const $refs = {}\r\n\r\n  const instance = {\r\n    field\r\n  }\r\n\r\n  mount()\r\n\r\n  instance.field._fieldToggler = instance\r\n\r\n  return instance\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function mount () {\r\n    mountTogglerField(params.disabled)\r\n    mountTogglerLabel(params.disabled)\r\n\r\n    if (!params.disabled) {\r\n      addTriggers()\r\n    }\r\n  }\r\n\r\n  function addTriggers () {\r\n    instance.editBtn.addEventListener('click', showField)\r\n    instance.confirmBtn.addEventListener('click', showLabel)\r\n    instance.field.addEventListener('keyup', handleEmptyValue)\r\n\r\n    $(instance.field).on('change', handleEmptyValue)\r\n  }\r\n\r\n  function showField (e) {\r\n    e.preventDefault()\r\n\r\n    $refs.togglerField.classList.remove(params.hiddenClass)\r\n    $refs.togglerLabel.classList.add(params.hiddenClass)\r\n  }\r\n\r\n  function showLabel (e) {\r\n    e.preventDefault()\r\n\r\n    $refs.togglerField.classList.add(params.hiddenClass)\r\n    $refs.togglerLabel.classList.remove(params.hiddenClass)\r\n\r\n    updateLabel()\r\n  }\r\n\r\n  function updateLabel () {\r\n    $refs.togglerTemplate.remove()\r\n\r\n    $refs.togglerLabel.insertAdjacentHTML(\r\n      'afterbegin', params.template(instance.field.value)\r\n    )\r\n\r\n    $refs.togglerTemplate = $refs.togglerLabel.firstElementChild\r\n  }\r\n\r\n  function handleEmptyValue () {\r\n    const isEmpty = instance.field.value === ''\r\n    instance.confirmBtn.disabled = isEmpty\r\n  }\r\n\r\n  function mountTogglerField () {\r\n    const container = instance.field.parentElement\r\n\r\n    container.insertAdjacentHTML(\r\n      'beforeend',\r\n      `<div class=\"field-toggler ${params.hiddenClass}\" data-toggler-field></div>`\r\n    )\r\n\r\n    $refs.togglerField = container\r\n      .querySelector('.field-toggler[data-toggler-field]')\r\n\r\n    $refs.togglerField\r\n      .appendChild(instance.field)\r\n\r\n    if (!params.disabled) {\r\n      const confirmBtn = getConfirmBtn()\r\n\r\n      $refs.togglerField.insertAdjacentHTML(\r\n        'beforeend', confirmBtn\r\n      )\r\n\r\n      instance.confirmBtn = $refs.togglerField\r\n        .querySelector('.field-toggler-action')\r\n    } else {\r\n      document.querySelector(`div[xid=div${fieldId}]`).remove()\r\n    }\r\n  }\r\n\r\n  function mountTogglerLabel () {\r\n    $refs.togglerField.insertAdjacentHTML(\r\n      'afterend',\r\n      '<div class=\"field-toggler\" data-toggler-label></div>'\r\n    )\r\n\r\n    $refs.togglerLabel = $refs.togglerField.nextSibling\r\n\r\n    $refs.togglerLabel.insertAdjacentHTML(\r\n      'afterbegin', params.template(instance.field.value)\r\n    )\r\n\r\n    $refs.togglerTemplate = $refs.togglerLabel.firstElementChild\r\n\r\n    if (!params.disabled) {\r\n      const editBtn = getEditBtn()\r\n\r\n      $refs.togglerLabel.insertAdjacentHTML(\r\n        'beforeend', editBtn\r\n      )\r\n\r\n      instance.editBtn = $refs.togglerLabel\r\n        .querySelector('.field-toggler-action')\r\n    }\r\n  }\r\n\r\n  function getConfirmBtn () {\r\n    return '<button class=\"field-toggler-action btn btn-link\"><i class=\"btn-icon fas fa-check\"></i> Salvar</button>'\r\n  }\r\n\r\n  function getEditBtn () {\r\n    return '<button class=\"btn btn-link field-toggler-action\"><i class=\"btn-icon fas fa-pen\"></i> Alterar</button>'\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   * - open\r\n   * - close\r\n   * - update (update label)\r\n   */\r\n}\r\n\r\n/**\r\n * 💡 Helper Functions\r\n */\r\nfunction getOrquestraField (fieldId, params) {\r\n  const field = document.querySelector(`[xname=inp${fieldId}]`)\r\n\r\n  if (!field) {\r\n    throw new ComponentError({\r\n      name: params.name,\r\n      message:\r\n      `Erro ao criar a instância do componente.\\nNenhum campo do Orquestra encontrado para a referência ${fieldId}`,\r\n      type: 'instace_field_not_found'\r\n    })\r\n  }\r\n\r\n  return field\r\n}\r\n","import Form from '../../components/form'\r\nimport { getStatusTag } from '../action-list/list-card'\r\nimport { setAlertDate } from '../action-plan/actions-helpers'\r\nimport FieldToggler from '../../components/field-toggler'\r\n\r\nconst fieldsTemplates = {\r\n  assignee (value) {\r\n    return `<div><i class=\"form-text-icon fas fa-user\"></i> ${value}</div>`\r\n  },\r\n  duedate (value) {\r\n    return `<div><i class=\"form-text-icon fas fa-calendar\"></i> ${value}</div>`\r\n  },\r\n  alertInterval (value) {\r\n    return `<div><i class=\"form-text-icon fas fa-bell\"></i> ${value} dias</div>`\r\n  },\r\n  status: getStatusTag\r\n}\r\n\r\nconst ActionForm = function () {\r\n  const $refs = {\r\n    table: document.querySelector('#actions-table'),\r\n    tableFields: {\r\n      alertDate: document.querySelector('[xname=inpacaoMonitoramentoPrazo]'),\r\n      duedate: document.querySelector('[xname=inpacaoTermino]')\r\n    },\r\n    formFields: {\r\n      assignee: document.querySelector('[xname=inpacaoResponsavel_form]'),\r\n      assigneeCodUser: document.querySelector('[xname=inpcodacaoResponsavel_form]'),\r\n      alertInterval: document.querySelector('[xname=inpacaoMonitoramento_form]'),\r\n      duedate: document.querySelector('[xname=inpacaoPrazo_form]'),\r\n      status: document.querySelector('[xname=inpacaoStatus_form]'),\r\n      finishedAt: document.querySelector('[xname=inpacaoTermino_form]')\r\n    }\r\n  }\r\n\r\n  const state = {\r\n    finishedAtId: 'acaoTermino_form',\r\n    emitter: null\r\n  }\r\n\r\n  return {\r\n    mount\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function mount ({ emitter, alias }) {\r\n    state.emitter = emitter\r\n    state.alias = alias\r\n\r\n    mountTable()\r\n    addTriggers()\r\n    toggleFinishedAt()\r\n    handleFormTogglers()\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function addTriggers () {\r\n    $refs.formFields.status\r\n      .addEventListener('change', toggleFinishedAt)\r\n\r\n    if (state.alias === 'avaliacao') {\r\n      $refs.formFields.alertInterval\r\n        .addEventListener('change', e =>\r\n          setAlertDate(e.target, $refs.tableFields.alertDate)\r\n        )\r\n    }\r\n  }\r\n\r\n  function mountTable () {\r\n    $refs.tableFields.duedate\r\n      .setAttribute('required', 'N')\r\n\r\n    Object.values($refs.formFields)\r\n      .forEach(field => {\r\n        updateTableValue(field)\r\n        $(field).on('change', () => updateTableValue(field))\r\n      })\r\n\r\n    if (state.alias === 'avaliacao') {\r\n      setAlertDate(\r\n        $refs.formFields.alertInterval,\r\n        $refs.tableFields.alertDate\r\n      )\r\n    }\r\n  }\r\n\r\n  function handleFormTogglers () {\r\n    const { alias } = state\r\n\r\n    if (alias === 'report' || alias === 'avaliacao') {\r\n      FieldToggler('acaoStatus_form', {\r\n        template: fieldsTemplates.status\r\n      })\r\n    }\r\n\r\n    if (alias === 'report') {\r\n      FieldToggler('acaoResponsavel_form', {\r\n        template: fieldsTemplates.assignee,\r\n        disabled: true\r\n      })\r\n      FieldToggler('acaoPrazo_form', {\r\n        template: fieldsTemplates.duedate,\r\n        disabled: true\r\n      })\r\n      FieldToggler('acaoMonitoramento_form', {\r\n        template: fieldsTemplates.alertInterval,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    if (alias === 'novoResponsavel') {\r\n      FieldToggler('acaoPrazo', {\r\n        template: fieldsTemplates.duedate,\r\n        disabled: true\r\n      })\r\n      FieldToggler('acaoMonitoramento_form', {\r\n        template: fieldsTemplates.alertInterval,\r\n        disabled: true\r\n      })\r\n      FieldToggler('acaoStatus_form', {\r\n        template: fieldsTemplates.status,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    if (alias === 'avaliacao') {\r\n      FieldToggler('acaoResponsavel_form', {\r\n        template: fieldsTemplates.assignee\r\n      })\r\n      FieldToggler('acaoPrazo_form', {\r\n        template: fieldsTemplates.duedate\r\n      })\r\n      FieldToggler('acaoMonitoramento_form', {\r\n        template: fieldsTemplates.alertInterval\r\n      })\r\n    }\r\n  }\r\n\r\n  function toggleFinishedAt () {\r\n    const status = $refs.formFields.status.value\r\n\r\n    if (status === 'Concluída' || status === 'Cancelada') {\r\n      Form.showField(state.finishedAtId)\r\n    } else {\r\n      Form.hideField(state.finishedAtId)\r\n    }\r\n  }\r\n\r\n  function updateTableValue (field) {\r\n    const id = field.getAttribute('xname').split('_')[0]\r\n    const tableField = $refs.table.querySelector(`[xname=${id}]`)\r\n\r\n    tableField.value = field.value\r\n  }\r\n}\r\n\r\nexport default ActionForm()\r\n","import ActionForm from './action-form.js'\r\n\r\nconst Action = function () {\r\n  const state = {\r\n    emitter: null\r\n  }\r\n\r\n  return {\r\n    init\r\n  }\r\n\r\n  /**\r\n   * 🔑 Public Methods\r\n   */\r\n  function init ({ alias, emitter }) {\r\n    const mountComponents = [\r\n      'report',\r\n      'novoResponsavel',\r\n      'avaliacao'\r\n    ].includes(alias)\r\n\r\n    state.emitter = emitter\r\n    state.alias = alias\r\n\r\n    if (mountComponents) {\r\n      mount()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 🔒 Private Methods\r\n   */\r\n  function mount () {\r\n    const { emitter, alias } = state\r\n\r\n    ActionForm.mount({ emitter, alias })\r\n  }\r\n}\r\n\r\nexport default Action()\r\n","/**\r\n * Dependencies\r\n */\r\nimport mitt from 'mitt'\r\n\r\n/**\r\n * Global Components\r\n */\r\nimport Form from './components/form'\r\nimport ButtonRadio from './components/button-radio'\r\n\r\n/**\r\n * Modules\r\n */\r\nimport ActionPlan from './modules/action-plan'\r\nimport ActionList from './modules/action-list'\r\nimport ActionDrawer from './modules/action-drawer'\r\nimport Action from './modules/action'\r\n\r\nconst emitter = mitt()\r\nconst alias = document.querySelector('#inpDsFlowElementAlias').value\r\n\r\nForm.conditionals()\r\nButtonRadio('[data-btn-radio]', { hidePrefix: true })\r\n\r\n/**\r\n * Initialize Modules\r\n */\r\nActionPlan.init({ alias, emitter })\r\nActionList.init({ alias, emitter })\r\nActionDrawer.init({ alias, emitter })\r\nAction.init({ alias, emitter })\r\n"],"sourceRoot":""}